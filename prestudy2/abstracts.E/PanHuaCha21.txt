ElementRank: Ranking Java Software Classes and Packages using a Multilayer Complex Network-Based Approach.

Software comprehension is an important part of software maintenance.
{{background}}
To understand a piece of large and complex software,
the first problem to be solved is where to start the understanding process.
{{background}}
Choosing to start the comprehension process from the
important software elements has proven to be a practical way.
{{background}}
Research on complex networks opens new opportunities for identifying
important elements, and many approaches have been proposed.
{{background}}
However, the software networks that existing approaches use neglect
the multilayer nature of software systems.
{{gap}}
That is, nodes in the network can have different types of relationships at the same time, and
each type of relationship forms a specific layer.
{{gap}}
Worse still, they mainly focus on identifying important classes, and little work has been
done on quantifying package importance.
{{gap}}
In this paper, we propose an ElementRank approach to provide a ranked list of classes (or
packages) for maintainers to start the comprehension process.
{{objective}}
The top-ranked classes (or packages) can be seen as the starting points
for the software comprehension process at the class (or package) level.
{{design}}
First, we introduce two kinds of multilayer software networks to
describe the topological structure of software at the class level and package level, respectively.
{{design}}
Second, we propose a weighted
PageRank algorithm to calculate the weighted PageRank value of classes (or packages) in each layer of the corresponding multilayer
software network.
{{design}}
Then, we use AHP (Analytic Hierarchy Process) to weigh each layer in the corresponding multilayer software network,
and further aggregate the weighted PageRank value to obtain the global weighted PageRank value for each class (or package).
{{design}}
Finally,
all the classes (or packages) are ranked according to their global weighted PageRank values in a descending order, and the top-ranked
classes (or packages) can serve as the starting points for the software comprehension process at the class (or package) level.
{{design}}
ElementRank is validated theoretically using the widely accepted Weyuker’s criteria.
{{method}}
Theoretical results show that the global weighted
PageRank value for classes (or packages) satisfies most of Weyuker’s properties.
{{result}}
Furthermore, ElementRank is evaluated empirically
using a set of twelve open source software systems.
{{method}}
Through a set of experiments, we show the rank correlation between the results of
ElementRank and that of the approaches in the related work, and the benefits of ElementRank are also illustrated in comparison with
other approaches in the related work.
{{a-result}}
Empirical results also show that ElementRank can be applied to large software systems.
{{result:i1u1}}
---

