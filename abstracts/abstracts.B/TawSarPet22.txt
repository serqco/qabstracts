Multi-Objective Software Effort Estimation: A Replication Study.

Replication studies increase our confidence in previous results when the findings are similar each time, and help mature our
knowledge by addressing both internal and external validity aspects.
{{background}}
However, these studies are still rare in certain software
engineering fields.
{{gap}}
In this paper, we replicate and extend a previous study, which denotes the current state-of-the-art for multi-objective
software effort estimation, namely CoGEE.
{{objective}}
We investigate the original research questions with an independent implementation and the
inclusion of a more robust baseline (LP4EE), carried out by the first author, who was not involved in the original study.
{{method}}
Through this
replication, we strengthen both the internal and external validity of the original study.
{{conclusion}}
We also answer two new research questions
investigating the effectiveness of CoGEE by using four additional evolutionary algorithms (i.e., IBEA, MOCell, NSGA-III, SPEA2) and a
well-known Java framework for evolutionary computation, namely JMetal (rather than the previously used R software), which allows us
to strengthen the external validity of the original study.
{{method}}
The results of our replication confirm that:
{{result}}
(1) CoGEE outperforms both baseline
and state-of-the-art benchmarks statistically significantly (p < 0:001); (2) CoGEE's multi-objective nature makes it able to reach such a
good performance; (3) CoGEE's estimation errors lie within claimed industrial human-expert-based thresholds.
{{result:i2}}
Moreover, our new
results show that the effectiveness of CoGEE is generally not limited to nor dependent on the choice of the multi-objective algorithm.
{{result}}
Using CoGEE with either NSGA-II, NSGA-III, or MOCell produces human competitive results in less than a minute.
{{result:i1}}
The Java version of
CoGEE has decreased the running time by over 99.8 percent with respect to its R counterpart.
{{result}}
We have made publicly available the
Java code of CoGEE to ease its adoption, as well as, the data used in this study in order to allow for future replication and extension of
our work.
{{a-resourcepointer}}
---
