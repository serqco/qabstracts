Continuous verification of system of systems with collaborative MAPE-K pattern and probability model slicing.

The phenomenon of cooperation among independent systems to achieve common goals has been growing.
{{}}
In
this regard, the concept of system of systems (SoS), wherein numerous independent systems cooperate with each
other, has been proposed.
{{}}
The key characteristic of an SoS is the operational and managerial (O/M) independence
of each constituent system (CS).
{{}}
Each CS of a collaborative SoS with high O/M independence provides
different levels of internal-knowledge sharing and is entitled to voluntary participation in the SoS (i.e., dynamic
reconfiguration).
{{}}
To increase goal-achievement rate, we need to verify SoS considering the knowledge-sharing
and dynamic reconfiguration constraints.
{{}}
The dynamic reconfiguration of SoSs can be managed using continuous verification, which involves
environment monitoring, modeling systems for operation in changing environments, and verifying the
model runtimes.
{{}}
However, O/M independence introduces the following challenges:
{{}}
(1) the low knowledgesharing level causes inaccurate modeling, which leads to inaccurate verification results, and (2) dynamic
reconfiguration requires frequent re-verification at runtime, which incurs high verification costs.
{{}}
In this paper, we propose a continuous-verification-of-SoS (CVSoS) approach to solve these two challenges.
{{}}
To address the low knowledge-sharing level, we propose the collaborative MAPE-K pattern.
{{}}
The key to
collaborative MAPE-K is the retrieval of knowledge from the other collaborating CSs.
{{}}
To address dynamic
reconfiguration, we propose a new slicing algorithm for SoS models.
{{}}
This algorithm promotes synchronization
dependence, which is essential for representing interactions between CSs.
{{}}
Furthermore, we demonstrate the
accuracy of this algorithm.
{{}}
We evaluated CVSoS across multiple SoS domains, which revealed that the SoS goal-achievement rate
increases by up to 64% using the collaborative MAPE-K pattern and that slicing the benchmark and SoS
models improved the verification time by an average of 67%.
{{}}
---
