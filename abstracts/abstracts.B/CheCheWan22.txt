Pathidea: Improving Information Retrieval-Based Bug Localization by Re-Constructing Execution Paths Using Logs.

To assist developers with debugging and analyzing bug reports, researchers have proposed information retrieval-based
bug localization (IRBL) approaches.
{{background}}
IRBL approaches leverage the textual information in bug reports as queries to generate a ranked
list of potential buggy files that may need further investigation.
{{background}}
Although IRBL approaches have shown promising results, most prior
research only leverages the textual information that is “visible” in bug reports, such as bug description or title.
{{background}}
However, in addition to
the textual description of the bug, developers also often attach logs in bug reports.
{{background}}
Logs provide important information that can be used
to re-construct the system execution paths when an issue happens and assist developers with debugging.
{{background}}
In this paper, we propose an
IRBL approach, Pathidea, which leverages logs in bug reports to re-construct execution paths and helps improve the results of bug
localization.
{{objective}}
Pathidea uses static analysis to create a file-level call graph, and re-constructs the call paths from the reported logs.
{{design}}
We
evaluate Pathidea on eight open source systems, with a total of 1,273 bug reports that contain logs.
{{method}}
We find that Pathidea achieves a
high recall (up to 51.9 percent for Top@5).
{{result}}
On average, Pathidea achieves an improvement that varies from 8 to 21 and 5 to 21 percent
over BRTracer in terms of Mean Average Precision (MAP) and Mean Reciprocal Rank (MRR) across studied systems, respectively.
{{result}}
Moreover, we find that the re-constructed execution paths can also complement other IRBL approaches by providing a 10 and 8 percent
improvement in terms of MAP and MRR, respectively.
{{result}}
Finally, we conduct a parameter sensitivity analysis and provide
recommendations on setting the parameter values when applying Pathidea.
{{method,a-result}}
---
