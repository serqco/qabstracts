On the Benefits and Limits of Incremental Build of Software Configurations: An Exploratory Study.

Software projects use build systems to automate the compilation,
testing, and continuous deployment of their software products.
{{background}}
As
software becomes increasingly configurable, the build of multiple
configurations is a pressing need, but expensive and challenging to
implement.
{{background}}
The current state of practice is to build independently
(a.k.a., clean build) a software for a subset of configurations.
{{background}}
While
incremental build has been studied for software evolution and
relatively small changes of the source code, it has surprisingly not
been considered for software configurations.
{{gap}}
In this exploratory
study, we examine the benefits and limits of building software
configurations incrementally, rather than always building them
cleanly.
{{objective}}
By using five real-life configurable systems as subjects, we
explore whether incremental build works, outperforms a sequence
of clean builds, is correct w.r.t.
clean build, and can be used to
find an optimal ordering for building configurations.
{{method}}
Our results
show that incremental build is feasible in 100% of the times in four
subjects and in 78% of the times in one subject.
{{result}}
In average, 88.5%
of the configurations could be built faster with incremental build
while also finding several alternatives faster incremental builds.
{{result}}
However, only 60% of faster incremental builds are correct.
{{result}}
Still,
when considering those correct incremental builds with clean builds,
we could always find an optimal order that is faster than just a
collection of clean builds with a gain up to 11.76%.
{{result}}
---
