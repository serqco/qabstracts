Supporting refactoring of BDD specifications - An empirical study.

Context:
{{h-background}}
Behavior-driven development (BDD) is a variant of test-driven development where specifications are
described in a structured domain-specific natural language.
{{background}}
Although refactoring is a crucial activity of BDD,
little research is available on the topic.
{{gap}}
Objective:
{{h-objective}}
To support practitioners in refactoring BDD specifications by (1) proposing semi-automated
approaches to identify refactoring candidates; (2) defining refactoring techniques for BDD specifications; and
(3) evaluating the proposed identification approaches in an industry context.
{{objective}}
Method:
{{h-method}}
Using Action Research, we have developed an approach for identifying refactoring candidates in BDD
specifications based on two measures of similarity and applied the approach in two projects of a large software
organization.
{{design}}
The accuracy of the measures for identifying refactoring candidates was then evaluated against
an approach based on machine learning and a manual approach based on practitioner perception.
{{method}}
Results:
{{h-result}}
We proposed two measures of similarity to support the identification of refactoring candidates in a
BDD specification base; (1) normalized compression similarity (NCS) and (2) similarity ratio (SR).
{{design}}
A semiautomated approach based on NCS and SR was developed and applied to two industrial cases to identify
refactoring candidates.
{{design,method}}
Our results show that our approach can identify candidates for refactoring 6o times
faster than a manual approach.
{{result}}
Our results furthermore showed that our measures accurately identified
refactoring candidates compared with a manual identification by software practitioners and outperformed an
ML-based text classification approach.
{{result:i2}}
We also described four types of refactoring techniques applicable to BDD
specifications; merging candidates, restructuring candidates, deleting duplicates, and renaming specification
titles.
{{design}}
Conclusion:
{{h-conclusion}}
Our results show that NCS and SR can help practitioners in accurately identifying BDD specifications that are suitable candidates for refactoring, which also decreases the time for identifying refactoring
candidates.
{{conclusion}}
---
