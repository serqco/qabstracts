Automated Classification of Overfitting Patches With Statically Extracted Code Features.

Automatic program repair (APR) aims to reduce the cost of manually fixing software defects.
{{background}}
However, APR suffers from
generating a multitude of overfitting patches, those patches that fail to correctly repair the defect beyond making the tests pass.
{{gap}}
This
paper presents a novel overfitting patch detection system called ODS to assess the correctness of APR patches.
{{objective}}
ODS first statically
compares a patched program and a buggy program in order to extract code features at the abstract syntax tree (AST) level, for the
single programming language Java.
{{design}}
Then, ODS uses supervised learning with the captured code features and patch correctness labels
to automatically learn a probabilistic model.
{{design}}
The learned ODS model can then finally be applied to classify new and unseen program
repair patches.
{{design}}
We conduct a large-scale experiment to evaluate the effectiveness of ODS on patch correctness classification based on
10,302 patches from Defects4J, Bugs.jar and Bears benchmarks.
{{method}}
The empirical evaluation shows that ODS is able to correctly classify
71.9 percent of program repair patches from 26 projects, which improves the state-of-the-art.
{{result}}
ODS is applicable in practice and can be
employed as a post-processing procedure to classify the patches generated by different APR systems.
{{conclusion}}
---
