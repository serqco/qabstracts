Keyword-guided abstractive code summarization via incorporating structural and contextual information.

Context:
{{h-background}}
Source code summarization is a crucial yet far from settled task for describing structured code
snippets in natural language.
{{background}}
High-quality code summaries could effectively facilitate program comprehension
and software maintenance.
{{background}}
A good code summary is supposed to have the following characteristics:
{{background}}
complete
information, correct meaning, and consistent description.
{{background}}
In recent years, numerous approaches have been
proposed for code summarization, but it is still very challenging for developers to automatically learn the
complex semantics from the source code and generate complete, correct and consistent code summaries.
{{gap}}
Objective:
{{h-objective}}
In this paper, we propose KGCodeSum, a novel keyword-guided abstractive code summarization
approach that incorporates structural and contextual information.
{{objective}}
Methods:
{{h-method}}
To improve summaries’ quality, we leverage both the structural information embedded in code
itself and the contextual information from related code snippets.
{{design}}
Meanwhile, we make use of keywords to
guide summaries’ generation to guarantee the code summaries contain key information.
{{design}}
Finally, we propose a
new dynamic vocabulary strategy which can effectively resolve the UNK problems in code summaries.
{{design:u1}}
Results:
{{h-result}}
Through our evaluation on the large-scale benchmark datasets with 2.1 million java method-comment
pairs and 1.1 million C/C++ function-summary pairs, We have observed that our approach could generate
better code summaries than existing state-of-the-art approaches in terms of completeness, correctness and
consistency.
{{result:i3}}
In addition, we also find that incorporating the dynamic vocabulary strategy into our approach
could significantly save time and space in the model training process.
{{result:i1}}
Conclusion:
{{h-conclusion}}
Our KGCodeSum approach could effectively generate code summaries.
{{summary}}
---
