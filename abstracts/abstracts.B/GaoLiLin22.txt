REFTY: Refinement Types for Valid Deep Learning Models.

Deep learning has been increasingly adopted in many application
areas.
{{background}}
To construct valid deep learning models, developers must
conform to certain computational constraints by carefully selecting
appropriate neural architectures and hyperparameter values.
{{background}}
For
example, the kernel size hyperparameter of the 2D convolution
operator cannot be overlarge to ensure that the height and width
of the output tensor remain positive.
{{background}}
Because model construction
is largely manual and lacks necessary tooling support, it is possible
to violate those constraints and raise type errors of deep learning
models, causing either runtime exceptions or wrong output results.
{{gap}}
In this paper, we propose Refty, a refinement type-based tool for
statically checking the validity of deep learning models ahead of job
execution.
{{objective}}
Refty refines each type of deep learning operator with
framework-independent logical formulae that describe the compu-
tational constraints on both tensors and hyperparameters.
{{design}}
Given
the neural architecture and hyperparameter domains of a model,
Refty visits every operator, generates a set of constraints that the
model should satisfy, and utilizes an SMT solver for solving the
constraints.
{{design}}
We have evaluated Refty on both individual operators
and representative real-world models with various hyperparameter
values under PyTorch and TensorFlow.
{{method}}
We also compare it with an
existing shape-checking tool.
{{method}}
The experimental results show that
Refty finds all the type errors and achieves 100% Precision and
Recall, demonstrating its effectiveness.
{{result:incredible}}
---
