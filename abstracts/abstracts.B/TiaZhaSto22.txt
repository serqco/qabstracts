What Makes a Good Commit Message?

A key issue in collaborative software development is communi-
cation among developers.
{{}}
One modality of communication is a
commit message, in which developers describe the changes they
make in a repository.
{{}}
As such, commit messages serve as an â€œaudit
trailâ€� by which developers can understand how the source code
of a project has changedâ€”and why.
{{}}
Hence, the quality of com-
mit messages affects the effectiveness of communication among
developers.
{{}}
Commit messages are often of poor quality as devel-
opers lack time and motivation to craft a good message.
{{}}
Several
automatic approaches have been proposed to generate commit mes-
sages.
{{}}
However, these are based on uncurated datasets including
considerable proportions of poorly phrased commit messages.
{{}}
In
this multi-method study, we first define what constitutes a â€œgoodâ€�
commit message, and then establish what proportion of commit
messages lack information using a sample of almost 1,600 messages
from five highly active open source projects.
{{}}
We find that an aver-
age of circa 44% of messages could be improved, suggesting the use
of uncurated datasets may be a major threat when commit message
generators are trained with such data.
{{}}
We also observe that prior
work has not considered semantics of commit messages, and there
is surprisingly little guidance available for writing good commit
messages.
{{}}
To that end, we develop a taxonomy based on recurring
patterns in commit messages' expressions.
{{}}
Finally, we investigate
whether "good"� commit messages can be automatically identified;
such automation could prompt developers to write better commit
messages.
{{}}
---
