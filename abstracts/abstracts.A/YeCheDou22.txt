Knowledge-Based Environment Dependency Inference for Python Programs.

Besides third-party packages, the Python interpreter and system
libraries are also critical dependencies of a Python program.
{{background}}
In our
empirical study, 34% programs are only compatible with specific
Python interpreter versions, and 24% programs require specific
system libraries.
{{result:i1:u2}}
However, existing techniques mainly focus on
inferring third-party package dependencies.
{{background}}
Therefore, they can
lack other necessary dependencies and violate version constraints,
thus resulting in program build failures and runtime errors.
{{background}}
This paper proposes a knowledge-based technique named PyEGo,
which can automatically infer dependencies of third-party packages,
the Python interpreter, and system libraries at compatible versions
for Python programs.
{{objective}}
We first construct the dependency knowl-
edge graph PyKG, which can portray the relations and constraints
among third-party packages, the Python interpreter, and system
libraries.
{{design}}
Then, by querying PyKG with extracted program features,
PyEGo constructs a program-related sub-graph with dependency
candidates of the three types.
{{design}}
It finally outputs the latest compatible
dependency versions by solving constraints in the sub-graph.
{{design}}
We
evaluate PyEGo on 2,891 single-file Python gists, 100 open-source
Python projects and 4,836 jupyter notebooks.
{{method}}
The experimental results
show that PyEGo achieves better accuracy, 0.2x to 3.5x higher
than the state-of-the-art approaches.
{{result:i1}}
---
