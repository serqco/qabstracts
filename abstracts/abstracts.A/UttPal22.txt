Fast and Precise Application Code Analysis using a Partial Library.

Long analysis times are a key bottleneck for the widespread adop-
tion of whole-program static analysis tools.
{{background}}
Fortunately, however,
a user is often only interested in finding errors in the application
code, which constitutes a small fraction of the whole program.
{{background}}
Cur-
rent application-focused analysis tools overapproximate the effect
of the library and hence reduce the precision of the analysis results.
{{background}}
However, empirical studies have shown that users have high ex-
pectations on precision and will ignore tool results that donâ€™t meet
these expectations.
{{background}}
In this paper, we introduce the first tool QueryMax that signifi-
cantly speeds up an application code analysis without dropping any
precision.
{{objective}}
QueryMax acts as a pre-processor to an existing analysis
tool to select a partial library that is most relevant to the analysis
queries in the application code.
{{design}}
The selected partial library plus
the application is given as input to the existing static analysis tool,
with the remaining library pointers treated as the bottom element
in the abstract domain.
{{design}}
This achieves a significant speedup over a
whole-program analysis, at the cost of a few lost errors, and with no
loss in precision.
{{result:i2}}
We instantiate and run experiments on QueryMax
for a cast-check analysis and a null-pointer analysis.
{{method:i1}}
For a particular
configuration, QueryMax enables these two analyses to achieve,
relative to a whole-program analysis, an average recall of 87%, a
precision of 100% and a geometric mean speedup of 10x.
{{a-method,result}}
---
