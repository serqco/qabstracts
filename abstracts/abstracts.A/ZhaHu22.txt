Towards Bidirectional Live Programming for Incomplete Programs.

Bidirectional live programming not only allows software develop-
ers to see continuous feedback on the output as they write the
program, but also allows them to modify the program by directly
manipulating the output, so that the modified program can get
the output that was directly manipulated.
{{}}
Despite the appealing
of existing bidirectional live programming systems, there is a big
limitation:
{{}}
they cannot deal with incomplete programs where code
blanks exist in the source programs.
{{}}
In this paper, we propose a framework to support bidirectional
live programming for incomplete programs, by extending the out-
put value structure, introducing hole binding, and formally defin-
ing bidirectional evaluators that are well-behaved.
{{}}
To illustrate
the usefulness of the framework, we realize the core bidirectional
evaluations of incomplete programs in a tool called Bidirectional
Preview.
{{}}
Our experimental results show that our extended back-
ward evaluation for incomplete programs is as efficient as that for
complete programs in that it is only 21ùëöùë† slower on a program with
10 holes than that on its full program, and our extended forward
evaluation makes no difference.
{{}}
Furthermore, we use quick sort and
student grades, two nontrivial examples of incomplete programs,
to demonstrate its usefulness in algorithm teaching and program
debugging.
{{}}
---
