TraceSim: An Alignment Method for Computing Stack Trace Similarity.

Software systems can automatically submit crash reports to a repository for investigation
when program failures occur.
{{background}}
A significant portion of these crash reports are duplicate, i.e.,
they are caused by the same software issue.
{{background}}
Therefore, if the volume of submitted reports is
very large, automatic grouping of duplicate crash reports can significantly ease and speed up
analysis of software failures.
{{background}}
This task is known as crash report deduplication.
{{background}}
Given a huge
volume of incoming reports, increasing quality of deduplication is an important task.
{{background}}
The
majority of studies address it via information retrieval or sequence matching methods based
on the similarity of stack traces from two crash reports.
{{background}}
While information retrieval methods disregard the position of a frame in a stack trace, the existing works based on sequence
matching algorithms do not fully consider subroutine global frequency and unmatched
frames.
{{background}}
Besides, due to data distribution differences among software projects, parameters
that are learned using machine learning algorithms are necessary to provide more flexibility
to the methods.
{{need}}
In this paper, we propose TraceSim â€“ an approach for crash report deduplication which combines TF-IDF, optimum global alignment, and machine learning (ML)
in a novel way.
{{objective}}
Moreover, we propose a new evaluation methodology for this task that is
more comprehensive and robust than previously used evaluation approaches.
{{objective}}
TraceSim significantly outperforms seven baselines and state-of-the-art methods in the majority of the
scenarios.
{{result:i1}}
It is the only approach that achieves competitive results on all datasets regarding
all considered metrics.
{{result:u1}}
Moreover, we conduct an extensive ablation study that demonstrates
the importance of each TraceSim's element to its final performance and robustness.
{{method,result}}
Finally,
we provide the source code for all considered methods and evaluation methodology as well
as the created datasets.
{{a-resourcepointer}}
---
