Empowering the Human as the Fitness Function in Search-Based Model-Driven Engineering.

In Search-Based Software Engineering, more than 100 works have involved the human in the search process to obtain
better results.
{{}}
However, the case where the human completely replaces the fitness function remains neglected.
{{}}
There is a good reason
for that; no matter how intelligent the human is, humans cannot assess millions of candidate solutions as heuristics do.
{{}}
In this work, we
study the influence of using the Human as the Fitness Function (HaFF) on the quality of the results.
{{}}
To do that, we focus on Search-Based
Model-Driven Engineering (SBMDE) because inspecting models should require less human effort than inspecting code thanks to the
abstraction of models.
{{}}
Therefore, we analyze the impact of HaFF in a real-world industrial case study of feature location in models.
{{}}
Furthermore, we also consider a reformulation operation (replacement) in the evaluation because a recent work reported that this
operation significantly reduces the number of iterations required in comparison to the widespread crossover and mutation operations.
{{}}
The
combination of HaFF and the reformulation operation (HaFF_R) improves the results of the best baseline by 0.15% in recall and 14.26% in
precision.
{{}}
Analyzing the results, we learned how to better leverage HaFF_R, which increased the improvement with regard to the best
baseline to 1.15% in recall and 20.05% in precision.
{{}}
HaFF_R significantly improves precision because humans are immune to the main
limitations of the baselines:
{{}}
vocabulary mismatch and tacit knowledge.
{{}}
A focus group confirmed the acceptance of HaFF.
{{}}
These results are
relevant for SBMDE because feature location is one of the main activities performed during maintenance and evolution.
{{}}
Our results, and
what we learned from them, can also motivate and help other researchers to explore the benefits of HaFF.
{{}}
In fact, we provide a guideline
that further discusses how to apply HaFF to other software engineering problems.
{{}}
---
