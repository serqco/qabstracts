Applying Bayesian Analysis Guidelines to Empirical Software Engineering Data: The Case of Programming Languages and Code Quality.


Statistical analysis is the tool of choice to turn data into information and then information into empirical
knowledge.
{{background}}
However, the process that goes from data to knowledge is long, uncertain, and riddled with
pitfalls.
{{background}}
To be valid, it should be supported by detailed, rigorous guidelines that help ferret out issues with the
data or model and lead to qualified results that strike a reasonable balance between generality and practical
relevance.
{{background}}
Such guidelines are being developed by statisticians to support the latest techniques for Bayesian
data analysis.
{{background}}
In this article, we frame these guidelines in a way that is apt to empirical research in software
engineering.
{{objective}}
To demonstrate the guidelines in practice, we apply them to reanalyze a GitHub dataset about code quality
in different programming languages.
{{method}}
The dataset’s original analysis [Ray et al.
2014] and a critical reanalysis [Berger et al.
2019] have attracted considerable attention—in no small part because they target a topic (the
impact of different programming languages) on which strong opinions abound.
{{background}}
The goals of our reanalysis
are largely orthogonal to this previous work, as we are concerned with demonstrating, on data in an interesting domain, how to build a principled Bayesian data analysis and to showcase its benefits.
{{objective}}
In the process, we
will also shed light on some critical aspects of the analyzed data and of the relationship between programming languages and code quality—such as the impact of project-specific characteristics other than the used
programming language.
{{a-result}}
The high-level conclusions of our exercise will be that Bayesian statistical techniques can be applied to
analyze software engineering data in a way that is principled, flexible, and leads to convincing results that
inform the state-of-the-art while highlighting the boundaries of its validity.
{{conclusion}}
The guidelines can support building solid statistical analyses and connecting their results.
{{conclusion}}
Thus, they can help buttress continued progress in
empirical software engineering research.
{{conclusion}}
---
False-positive sentence ends due to "et al.".