A model-driven approach to reengineering processes in cloud computing.

Context:
{{h-background}}
The reengineering process of large data-intensive legacy software applications (“legacy applications” for
brevity) to cloud platforms involves different interrelated activities.
{{background}}
These activities are related to planning,
architecture design, re-hosting/lift-shift, code refactoring, and other related ones.
{{background}}
In this regard, the cloud
computing literature has seen the emergence of different methods with a disparate point of view of the same
underlying legacy application reengineering process to cloud platforms.
{{background}}
As such, the effective interoperability
and tailoring of these methods become problematic due to the lack of integrated and consistent standard models.
{{background}}
Objective:
{{h-objective}}
We design, implement, and evaluate a novel framework called MLSAC (Migration of Legacy Software
Applications to the Cloud).
{{objective}}
The core aim of MLSAC is to facilitate the sharing and tailoring of reengineering
methods for migrating legacy applications to cloud platforms.
{{objective}}
MLSAC achieves this by using a collection of
coherent and empirically tested cloud-specific method fragments from the literature and practice.
{{design}}
A metamodel
(or meta-method) together with corresponding instantiation guidelines is developed from this collection.
{{design}}
The
metamodel can also be used to create and maintain bespoke reengineering methods in a given scenario of
reengineering to cloud platforms.
{{design}}
Approach:
{{h-method}}
MLSAC is underpinned by a metamodeling approach that acts as a representational layer to express
reengineering methods.
{{design}}
The design and evaluation of MLSAC are informed by the guidelines from the design
science research approach.
{{design}}
Results:
{{h-result}}
Our framework is an accessible guide of what legacy-to-cloud reengineering methods can look like.
{{design}}
The
efficacy of the framework is demonstrated by modeling real-world reengineering scenarios and obtaining user
feedback.
{{method:i2}}
Our findings show that the framework provides a fully-fledged domain-specific, yet platformindependent, foundation for the semi-automated representing, maintaining, sharing, and tailoring reengineer­
ing methods.
{{conclusion}}
MLSAC contributes to the state of the art of cloud computing and model-driven software engi­
neering literature through (a) providing a collection of mainstream method fragments for incorporate into
various scenarios of reengineering processes and (b) enabling a basis for consistent creation, representation, and
maintenance of reengineering methods and processes within the cloud computing community.
{{conclusion}}
---
