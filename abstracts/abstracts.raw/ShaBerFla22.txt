Eyes on Code: A Study on Developers&apos; Code Navigation Strategies.

What code navigation strategies do developers use and what mechanisms do they employ to find relevant information?
{{}}
Do
their strategies evolve over the course of longer tasks?
{{}}
Answers to these questions can provide insight to educators and software tool
designers to support a wide variety of programmers as they tackle increasingly-complex software systems.
{{}}
However, little research to
date has measured developers’ code navigation strategies in ecologically-valid settings, or analyzed how strategies progressed
throughout a maintenance task.
{{}}
We propose a novel experimental design that more accurately represents the software maintenance
process in terms of software complexity and IDE interactions.
{{}}
Using this framework, we conduct an eye-tracking study (n=36) of
realistic bug-fixing tasks, dynamically and empirically identifying relevant code areas.
{{}}
We introduce a three-phase model to
characterize developers’ navigation behavior supported by statistical variations in eye movements over time.
{{}}
We also propose
quantifiable notion of “thrashing” with the code as a navigation activity.
{{}}
We find that thrashing is associated with lower effectiveness.
{{}}
Our results confirm that the relevance of various code elements changes over time, and that our proposed three-phase model is
capable of capturing these significant changes.
{{}}
We discuss our findings and their implications for tool designers, educators, and the
research community.
{{}}
---
