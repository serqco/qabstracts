Defect prediction using deep learning with Network Portrait Divergence for software evolution.

Understanding software evolution is essential for software development tasks, including debugging, maintenance, and testing.
{{}}
As a software system evolves, it grows in size
and becomes more complex, hindering its comprehension.
{{}}
Researchers proposed several
approaches for software quality analysis based on software metrics.
{{}}
One of the primary
practices is predicting defects across software components in the codebase to improve
agile product quality.
{{}}
While several software metrics exist, graph-based metrics have rarely
been utilized in software quality.
{{}}
In this paper, we explore recent network comparison
advancements to characterize software evolution and focus on aiding software metrics
analysis and defect prediction.
{{}}
We support our approach with an automated tool named
GraphEvoDef.
{{}}
Particularly, GraphEvoDef provides three major contributions:
{{}}
(1) detecting and visualizing significant events in software evolution using call graphs, (2) extracting
metrics that are suitable for software comprehension, and (3) detecting and estimating the
number of defects in a given code entity (e.g., class).
{{}}
One of our major findings is the
usefulness of the Network Portrait Divergence metric, borrowed from the information theory domain, to aid the understanding of software evolution.
{{}}
To validate our approach, we
examined 29 different open-source Java projects from GitHub and then demonstrated the
proposed approach using 9 use cases with defect data from the the PROMISE dataset.
{{}}
We
also trained and evaluated defect prediction models for both classification and regression
tasks.
{{}}
Our proposed technique has an 18% reduction in the mean square error and a 48%
increase in squared correlation coefficient over the state-of-the-art approaches in the defect
prediction domain.
{{}}
---
