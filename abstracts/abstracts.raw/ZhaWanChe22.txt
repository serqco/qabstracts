History-Driven Test Program Synthesis for JVM Testing.

Java Virtual Machine (JVM) provides the runtime environment for
Java programs, which allows Java to be “write once, run anywhere”.
{{}}
JVM plays a decisive role in the correctness of all Java programs
running on it.
{{}}
Therefore, ensuring the correctness and robustness
of JVM implementations is essential for Java programs.
{{}}
To date,
various techniques have been proposed to expose JVM bugs via
generating potential bug-revealing test programs.
{{}}
However, the
diversity and effectiveness of test programs generated by existing
research are far from enough since they mainly focus on minor syn-
tactic/semantic mutations.
{{}}
In this paper, we propose JavaTailor,
the first history-driven test program synthesis technique, which
synthesizes diverse test programs by weaving the ingredients ex-
tracted from JVM historical bug-revealing test programs into seed
programs for covering more JVM behaviors/paths.
{{}}
More specifically,
JavaTailor first extracts five types of code ingredients from the his-
torical bug-revealing test programs.
{{}}
Then, to synthesize diverse test
programs, it iteratively inserts the extracted ingredients into the
seed programs and strengthens their interactions via introducing
extra data dependencies between them.
{{}}
Finally, JavaTailor employs
these synthesized test programs to differentially test JVMs.
{{}}
Our ex-
perimental results on popular JVM implementations (i.e., HotSpot
and OpenJ9) show that JavaTailor outperforms the state-of-the-art
technique in generating more diverse and effective test programs,
e.g., test programs generated by JavaTailor can achieve higher JVM
code coverage and detect many more unique inconsistencies than
the state-of-the-art technique.
{{}}
Furthermore, JavaTailor has detected
10 previously unknown bugs, 6 of which have been confirmed/fixed
by developers.
{{}}
∗ Junjie
Chen is the corresponding author.
{{}}
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page.
{{}}
Copyrights for components of this work owned by others than ACM
must be honored.
{{}}
Abstracting with credit is permitted.
{{}}
To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee.
{{}}
Request permissions from permissions@acm.org.
{{}}
ICSE ’22, May 21–29, 2022, Pittsburgh, PA, USA
© 2022 Association for Computing Machinery.
{{}}
ACM ISBN 978-1-4503-9221-1/22/05.
{{}}
.
{{}}
. $
{{}}
15.00
https://doi.org/10.1145/3510003.3510059
{{}}
---
