{
  "FrePetGer22": "What happens in my code reviews? An investigation on automatically classifying review changes.",
  "ZhaLiuFan22": "Research on Third-Party Libraries in Android Apps: A Taxonomy and Systematic Literature Review.",
  "BasBeeLaz22": "Static detection of equivalent mutants in real-time model-based mutation testing.",
  "ZhoHeZen22": "Software defect prediction with semantic and structural information of codes based on Graph Neural Networks.",
  "ForStoZim22": "A Tale of Two Cities: Software Developers Working from Home during the COVID-19 Pandemic.",
  "KauFeaAlv22": "Prioritizing Mutants to Guide Mutation Testing.",
  "KumSumKum22": "Predicting reliability of software in industrial systems using a Petri net based approach: A case study on a safety system used in nuclear power plant.",
  "WanLiuXie22": "Automated Testing of Software that Uses Machine Learning APIs.",
  "PanLinZam22": "Why Do Developers Reject Refactorings in Open-Source Projects?",
  "Liu22": "All in One: Design, Verification, and Implementation of SNOW-optimal Read Atomic Transactions.",
  "CobMazHic22": "Garbage Collection Makes Rust Easier to Use: A Randomized Controlled Trial of the Bronze Garbage Collector.",
  "RajZahBab22": "Challenges and solutions when adopting DevSecOps: A systematic review.",
  "ZerMenDec22": "On the impact of security vulnerabilities in the npm and RubyGems dependency networks.",
  "ShiBiaBri22": "PRINS: scalable model inference for component-based system logs.",
  "MenCla22": "Hashing Fuzzing: Introducing Input Diversity to Improve Crash Detection.",
  "XueZhoLuo22": "PackerGrind: An Adaptive Unpacking System for Android Apps.",
  "QiuGaoXia22": "Deep Just-In-Time Defect Localization.",
  "GeFanQia22": "Locality-based security bug report identification via active learning.",
  "CheHuWei22": "Keyword-guided abstractive code summarization via incorporating structural and contextual information.",
  "TsaBraHir22": "Extracting enhanced artificial intelligence model metadata from software repositories.",
  "YanZhaPan22": "Do Developers Really Know How to Use Git Commands? A Large-scale Study Using Stack Overflow.",
  "XiaHeXu22": "Recommending Good First Issues in GitHub OSS Projects.",
  "ZhoZhaShe22": "Adversarial Robustness of Deep Code Comment Generation.",
  "SamGaoDao22": "JuCify: A Step Towards Android Code Unification for Enhanced Static Analysis.",
  "XieLeiYan22": "A Universal Data Augmentation Approach for Fault Localization.",
  "YanXiaFan22": "Just-In-Time Defect Identification and Localization: A Two-Phase Framework.",
  "WatCooNad22": "A Systematic Literature Review on the Use of Deep Learning in Software Engineering Research.",
  "RobCapGon22": "Development effort estimation in free/open source software from activity in version control systems.",
  "LamChe22": "Understanding and supporting the design systems practice.",
  "HuaJiaLuo22": "Change-Patterns Mapping: A Boosting Way for Change Impact Analysis.",
  "FloPerWei22": "Retrieving Data Constraint Implementations Using Fine-Grained Code Patterns.",
  "RonWanMan22": "An empirical study of emoji use in software development communication.",
  "KotKurDil22": "The practical roles of enterprise architecture artifacts: A classification and relationship.",
  "GalEwaJun22": "Accelerating Continuous Integration by Caching Environments and Inferring Dependencies.",
  "IzaGisGou22": "CodeFill: Multi-token Code Completion by Jointly learning from Structure and Naming Sequences.",
  "LiuXiaLo22": "Broken External Links on Stack Overflow.",
  "MarBogFra22": "Software Engineering for AI-Based Systems: A Survey.",
  "BalRal22": "Sampling in software engineering research: a critical review and guidelines.",
  "JiaLiuJin22": "Automated Expansion of Abbreviations Based on Semantic Relation and Transfer Expansion.",
  "HamMetQas22": "iContractML 2.0: A domain-specific language for modeling and deploying smart contracts onto multiple blockchain platforms.",
  "HorCorFue22": "Combining multiple granularity variability in a software product line approach for web engineering.",
  "GonRajHas22": "Revisiting the Impact of Dependency Network Metrics on Software Defect Prediction.",
  "ZenWuYe22": "Fault Localization via Efficient Probabilistic Modeling of Program Semantics.",
  "LavMor22": "Comparing \u03d5 and the F-measure as performance metrics for software-related classifications.",
  "FurTorFel22": "Applying Bayesian Analysis Guidelines to Empirical Software Engineering Data: The Case of Programming Languages and Code Quality.",
  "TurShaAld22": "DrAsync: Identifying and Visualizing Anti-Patterns in Asynchronous JavaScript.",
  "HaqShiNej22": "Correction to: Can Offline Testing of Deep Neural Networks Replace Their Online Testing?",
  "AssGhaPul22": "The essential competencies of software professionals: A unified competence framework.",
  "SprSinSen22": "Building Maintainable Software Using Abstraction Layering.",
  "KonKasKam22": "An empirical study of issue-link algorithms: which issue-link algorithms should we use?",
  "ImrDam22": "Using clarification questions to improve software developers&apos; Web search.",
  "BiXiaLo22": "An Empirical Study of Release Note Production and Usage in Practice.",
  "ZouWanGao22": "Buddy Stacks: Protecting Return Addresses with Efficient Thread-Local Storage and Runtime Re-Randomization.",
  "ValD\u00edaBou22": "A Compositional Approach for Complex Event Pattern Modeling and Transformation to Colored Petri Nets with Black Sequencing Transitions.",
  "WuZouDou22": "VulCNN: An Image-inspired Scalable Vulnerability Detection System.",
  "XiaHanAi22": "Path context augmented statement and network for learning programs.",
  "DabLetPer22a": "Correction to: Analysing app reviews for software engineering: a systematic literature review.",
  "YanXiaLo22": "Predictive Models in Software Engineering: Challenges and Opportunities.",
  "GeoKecSha22": "Green AI: Do Deep Learning Frameworks Have Different Costs?",
  "BesMarBos22": "The use of incentives to promote technical debt management.",
  "SheBanNat22": "DeepAnalyze: Learning to Localize Crashes at Scale.",
  "WonWagTre22": "Self-adaptive systems: A systematic literature review across categories and domains.",
  "YuHuLi22": "Assessing and Improving an Evaluation Dataset for Detecting Semantic Code Clones via Deep Learning.",
  "MaMocZar22": "A Methodology for Analyzing Uptake of Software Technologies Among Developers.",
  "GerMarLat22": "Inference and Test Generation Using Program Invariants in Chemical Reaction Networks.",
  "RahImtSto22": "Why secret detection tools are not enough: It&apos;s not just about false positives - An industrial case study.",
  "WanZhaSui22": "Reinforcement-Learning-Guided Source Code Summarization Using Hierarchical Attention.",
  "ArtHarPra22": "Nessie: Automatically Testing JavaScript APIs with Asynchronous Callbacks.",
  "FirFirRos22": "Engineering Web Augmentation software: A development method for enabling end-user maintenance.",
  "LiuGaoXia22": "On the Reproducibility and Replicability of Deep Learning in Software Engineering.",
  "LuLiLiu22": "CloudRaid: Detecting Distributed Concurrency Bugs via Log Mining and Enhancement.",
  "WhiKri22": "TCTracer: Establishing test-to-code traceability links using dynamic and static techniques.",
  "HeMenChe22": "Towards Security Threats of Deep Learning Systems: A Survey.",
  "ValMarPan22": "Towards a model and methodology for evaluating data quality in software engineering experiments.",
  "GaoFenYin22": "Adaptive Test Selection for Deep Neural Networks.",
  "WanYanWan22": "Context-Aware Personalized Crowdtesting Task Recommendation.",
  "OliAssGar22": "Developers&apos; perception matters: machine learning to detect developer-sensitive smells.",
  "DanPlaHer22": "Identifying Challenges for OSS Vulnerability Scanners - A Study &amp; Test Suite.",
  "HouBel22": "A Practical Approach for Dynamic Taint Tracking with Control-flow Relationships.",
  "BaiJiaCap22": "A three-stage transfer learning framework for multi-source cross-project software defect prediction.",
  "FloMorZha22": "An empirical study of data constraint implementations in Java.",
  "WerLiLow22": "Continuously Managing NFRs: Opportunities and Challenges in Practice.",
  "RanT\u00ebrKhe22": "On the Benefits and Limits of Incremental Build of Software Configurations: An Exploratory Study.",
  "YanWanFan22": "Enhancing software modularization via semantic outliers filtration and label propagation.",
  "MadNagBir22": "ConE: A Concurrent Edit Detection Tool for Large-scale Software Development.",
  "KukPinAmm22": "CONFETTI: Amplifying Concolic Guidance for Fuzzers.",
  "H\u00f6pHaaTic22": "Advantages and disadvantages of (dedicated) model transformation languages.",
  "TunTraLe22": "An automated test data generation method for void pointers and function pointers in C/C++ libraries and embedded projects.",
  "BarStoFit22": "Managing Episodic Volunteers in Free/Libre/Open Source Software Communities.",
  "G\u00f4lAraRos22": "Detecting relevant app reviews for software evolution and maintenance through multimodal one-class learning.",
  "CalLan22": "Using Personality Detection Tools for Software Engineering Research: How Far Can We Go?",
  "AbdBadCos22": "A Comparison of Natural Language Understanding Platforms for Chatbots in Software Engineering.",
  "TizKumTan22": "Fairness-aware Configuration of Machine Learning Libraries.",
  "BraFriHol22": "Sources of software development task friction.",
  "LinLiZha22": "XCode: Towards Cross-Language Code Representation with Large-Scale Pre-Training.",
  "NaeAla22": "Predicting sensitive information leakage in IoT applications using flows-aware machine learning approach.",
  "FanWeiJin22": "Explanation-Guided Fairness Testing through Genetic Algorithm.",
  "Sah\u00d6zyTos22": "Predicting vulnerability inducing function versions using node embeddings and graph neural networks.",
  "LiuLiSwa22": "PUS: A Fast and Highly Efficient Solver for Inclusion-based Pointer Analysis.",
  "JaiPurSha22": "BiRD: Race Detection in Software Binaries under Relaxed Memory Models.",
  "Pezz\u00e822": "Editorial: A Retrospective and Prospective Reflection.",
  "NadRodNag22": "On the Relationship Between the Developer&apos;s Perceptible Race and Ethnicity and the Evaluation of Contributions in OSS.",
  "J\u00f8rHalLie22": "When should we (not) use the mean magnitude of relative error (MMRE) as an error measure in software development effort estimation?",
  "HerFerGal22": "Uniform and scalable sampling of highly configurable systems.",
  "YeGuMar22": "Automated Classification of Overfitting Patches With Statically Extracted Code Features.",
  "JiaTanDam22": "An Empirical Study of Model-Agnostic Techniques for Defect Prediction Models.",
  "\u00c7etT\u00fcz22": "Analyzing developer contributions using artifact traceability graphs.",
  "ChaZhaShe22": "Cross-Domain Deep Code Search with Meta Learning.",
  "LyuRajLin22": "Towards a Consistent Interpretation of AIOps Models.",
  "EscMazBed22": "Studying eventual connectivity issues in Android apps.",
  "NolShaGao22": "Trust Enhancement Issues in Program Repair.",
  "Vidoni22": "A systematic process for Mining Software Repositories: Results from a systematic literature review.",
  "AhmMerBah22": "A Study on Blockchain Architecture Design Decisions and Their Security Attacks and Threats.",
  "HatNovBal22": "GitHub Discussions: An exploratory study of early adoption.",
  "TeyIzaIsa22": "A Fast Clustering Algorithm for Modularization of Large-Scale Software Systems.",
  "HuCheWan22": "Correlating Automated and Human Evaluation of Code Documentation Generation Quality.",
  "ChoLeeKan22": "Classifying issue reports according to feature descriptions in a user manual based on a deep learning model.",
  "KalNorVog22": "A systematic literature review on counterexample explanation.",
  "ReiJahMoc22": "The Extent of Orphan Vulnerabilities from Code Reuse in Open Source Software.",
  "TawSarPet22": "Multi-Objective Software Effort Estimation: A Replication Study.",
  "FahAhmBeh22": "Software Engineering for Internet of Things: The Practitioners&apos; Perspective.",
  "HuaWeiWan22": "Yet another combination of IR- and neural-based comment generation.",
  "RusMasSto22": "From anecdote to evidence: the relationship between personality and need for cognition of developers.",
  "LiuFenYin22": "DeepState: Selecting Test Suites to Enhance the Robustness of Recurrent Neural Networks.",
  "MenDonLi22": "Linear-time Temporal Logic guided Greybox Fuzzing.",
  "WuYanMa22": "On the usage and development of deep learning compilers: an empirical study on TVM.",
  "CanSorFor22": "Patchworking: Exploring the code changes induced by vulnerability fixing activities.",
  "GuoCheXin22": "Detecting and Augmenting Missing Key Aspects in Vulnerability Descriptions.",
  "WanLutQia22": "EAGLE: Creating Equivalent Graphs to Test Deep Learning Libraries.",
  "MeyAlmKel22": "Examining Penetration Tester Behavior in the Collegiate Penetration Testing Competition.",
  "DabLetPer22": "Analysing app reviews for software engineering: a systematic literature review.",
  "PreRob22": "Making the Most of Small Software Engineering Datasets With Modern Machine Learning.",
  "AtaMasHem22": "Deep State Inference: Toward Behavioral Model Inference of Black-Box Software Systems.",
  "UddGu\u00e9Kho22": "An Empirical Study of the Effectiveness of an Ensemble of Stand-alone Sentiment Detection Tools for Software Engineering Datasets.",
  "SheBanKum22": "SoftNER: Mining knowledge graphs from cloud incidents.",
  "BomBonGal22": "Guidelines for the development of a critical software under emergency.",
  "SahUraMah22": "SAPIENTML: Synthesizing Machine Learning Pipelines by Learning from Human-Written Solutions.",
  "ArdBotCop22": "Feature Matching-based Approaches to Improve the Robustness of Android Visual GUI Testing.",
  "ParBarMec22": "Trident: Controlling Side Effects in Automated Program Repair.",
  "AlDAhmMah22": "An end-to-end deep learning system for requirements classification using recurrent neural networks.",
  "LanRahFan22": "Model Transformation Development Using Automated Requirements Analysis, Metamodel Matching, and Transformation by Example.",
  "JunTra22": "Consolidating a common perspective on Technical Debt and its Management through a Tertiary Study.",
  "UttPal22": "Fast and Precise Application Code Analysis using a Partial Library.",
  "GinMarMar22": "A comprehensive study of code-removal patches in automated program repair.",
  "CasZamNov22": "Self-Admitted Technical Debt and comments&apos; polarity: an empirical study.",
  "LiWanNgu22": "DEAR: A Novel Deep Learning-based Approach for Automated Program Repair.",
  "ParKapHil22": "A Survey of Flaky Tests.",
  "MajModMen22": "Revisiting process versus product metrics: a large scale analysis.",
  "CinCooPas22": "An Empirical Study on the Usage of Transformer Models for Code Completion.",
  "MasPasBav22": "Using Deep Learning to Generate Complete Log Statements.",
  "SunZhaFan22": "Test case recommendation based on balanced distance of test targets.",
  "CheCheWan22": "Pathidea: Improving Information Retrieval-Based Bug Localization by Re-Constructing Execution Paths Using Logs.",
  "StrDinLin22": "A teamwork effectiveness model for agile software development.",
  "NgoPasBri22": "Automated, Cost-effective, and Update-driven App Testing.",
  "PatZhaPap22": "SugarC: Scalable Desugaring of Real-World Preprocessor Usage into Pure C.",
  "GaoZhuZha22": "Dealing with imbalanced data for interpretable defect prediction.",
  "FraM\u00e9nVog22": "How do Practitioners Perceive the Relevance of Requirements Engineering Research?",
  "ZhaFuLi22": "Towards Robustness of Deep Program Processing Models - Detection, Estimation, and Enhancement.",
  "ChoGueSil22": "An approach to explore sequential interactions in cognitive activities of software engineering.",
  "VysMcIAda22": "Quantifying, Characterizing, and Mitigating Flakily Covered Program Elements.",
  "TiaLiPia22": "Predicting Patch Correctness Based on the Similarity of Failing Test Cases.",
  "SuFanChe22": "Why My App Crashes? Understanding and Benchmarking Framework-Specific Exceptions of Android Apps.",
  "ZhaLiWan22": "ReMoS: Reducing Defect Inheritance in Transfer Learning via Relevant Model Slicing.",
  "KhaSin22": "Towards building a pragmatic cross-project defect prediction model combining non-effort based and effort-based performance measures for a balanced evaluation.",
  "AnaGreKeh22": "A conceptual model for unifying variability in space and time: Rationale, validation, and illustrative applications.",
  "LiYanHua22": "Towards Practical Robustness Analysis for DNNs based on PAC-Model Learning.",
  "RziHasKes22": "An empirical study on ML DevOps adoption trends, efforts, and benefits analysis.",
  "ZhuZhaHas22": "An empirical study of question discussions on Stack Overflow.",
  "FalAhlPen22": "The Impact of Dormant Defects on Defect Prediction: A Study of 19 Apache Projects.",
  "ArcFonHau22": "Bug Localization in Model-Based Systems in the Wild.",
  "CamRus22": "Modeling Performance of Microservices Systems with Growth Theory.",
  "MaXuRen22": "Pluto: Exposing Vulnerabilities in Inter-Contract Scenarios.",
  "MohRalTur22": "How Templated Requirements Specifications Inhibit Creativity in Software Engineering.",
  "TecT\u00fczMor22": "Cleaning ground truth data in software task assignment.",
  "WanJiaLi22": "Bridging Pre-trained Models and Downstream Tasks for Source Code Understanding.",
  "FliChaDye22": "Pitfalls and guidelines for using time-based Git data.",
  "PisSp\u00e4Bud22": "Fluently specifying taint-flow queries with fluentTQL.",
  "ValHunFig22": "Challenges of Resolving Merge Conflicts: A Mining and Survey Study.",
  "LiuZhoAru22": "Automatic Detection of Performance Bugs in Database Systems using Equivalent Queries.",
  "Crnkovic22": "Obituary Dr. Ivica Crnkovic.",
  "GaoLiLin22": "REFTY: Refinement Types for Valid Deep Learning Models.",
  "TraPomTuc22": "How Software Refactoring Impacts Execution Time.",
  "BeyDanDie22": "Verification Witnesses.",
  "AhmAshAzg22": "A DQN-based agent for automatic software refactoring.",
  "BokAle22": "A Hybrid Distributed EA Approach for Energy Optimisation on Smartphones.",
  "MasHodBli22": "Real World Scrum A Grounded Theory of Variations in Practice.",
  "MilCohKlu22": "&quot;Did You Miss My Comment or What?&quot; Understanding Toxicity in Open Source Discussions.",
  "MarSen22": "Industry-Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns.",
  "WeiHarHua22": "CLEAR: Contrastive Learning for API Recommendation.",
  "AlaKraPaa22": "The journey to technical excellence in agile software development.",
  "SonJobRan22": "Mining Similar Methods for Test Adaptation.",
  "ChePenChe22": "&quot;More Than Deep Learning&quot;: post-processing for API sequence recommendation.",
  "RusSto22": "Gender Differences in Personality Traits of Software Engineers.",
  "LiuLiDen22": "Morest: Model-based RESTful API Testing with Execution Feedback.",
  "CorPasBri22": "Mutation Analysis for Cyber-Physical Systems: Scalable Solutions and Results in the Space Domain.",
  "KraHanHas22": "Collaborative program comprehension via software visualization in extended reality.",
  "NiXiaLo22": "Revisiting Supervised and Unsupervised Methods for Effort-Aware Cross-Project Defect Prediction.",
  "CheJinZho22": "Aligned metric representation based balanced multiset ensemble learning for heterogeneous defect prediction.",
  "GarDegJim22": "Learning from what we know: How to perform vulnerability prediction using noisy historical data.",
  "BiaTon22": "Testing the Plasticity of Reinforcement Learning-based Systems.",
  "WuSheChe22": "Automatically repairing tensor shape faults in deep learning programs.",
  "DasPhi22": "Trace visualization within the Software City metaphor: Controlled experiments on program comprehension.",
  "MoldapAgu22": "Fuzzing Class Specifications.",
  "ZhoBoWu22": "SPVF: security property assisted vulnerability fixing via attention-based models.",
  "MaeGalGor22": "Revisiting the building of past snapshots - a replication and reproduction study.",
  "ZhaChePen22": "Buildsheriff: Change-Aware Test Failure Triage for Continuous Integration Builds.",
  "GueLarChe22": "Property Satisfiability Analysis for Product Lines of Modelling Languages.",
  "ZhoCheHao22": "Parallel Test Prioritization.",
  "BagKahBri22": "Reinforcement Learning for Test Case Prioritization.",
  "LeeShiNej22": "Optimal priority assignment for real-time systems: a coevolution-based approach.",
  "GaoZhoXia22": "Automating App Review Response Generation Based on Contextual Knowledge.",
  "KapSod22": "OSS Effort Estimation Using Software Features Similarity and Developer Activity-Based Metrics.",
  "AniTreZai22": "How Developers Engineer Test Cases: An Observational Study.",
  "BraZai22": "Developer-centric test amplification.",
  "BriRouSei22": "Erratum: Leveraging Flexible Tree Matching to repair broken locators in web automation scripts.",
  "AmrMaoSeg22": "Dynamic Update for Synthesized GR(1) Controllers.",
  "GiaMasMag22": "Monitoring Constraints and Metaconstraints with Temporal Logics on Finite Traces.",
  "CasDeuGra22": "Detecting privacy requirements from User Stories with NLP transfer learning models.",
  "YanHeXia22": "A comprehensive empirical study on bug characteristics of deep learning frameworks.",
  "SaiOunAha22": "Tracking bad updates in mobile apps: a search-based approach.",
  "AndLimMar22": "Guaranteeing Timed Opacity using Parametric Timed Model Checking.",
  "SunSunPha22": "Causality-Based Neural Network Repair.",
  "LinWilHal22": "The Impact of Surface Features on Choice of (in)Secure Answers by Stackoverflow Readers.",
  "CheZhuHu22": "Conflict-aware Inference of Python Compatible Runtime Environments with Domain Knowledge Graph.",
  "VelJamSie22": "On Debugging the Performance of Configurable Software Systems: Developer Needs and Tailored Tool Support.",
  "CopAl\u00e922": "A taxonomy of metrics for GUI-based testing research: A systematic literature review.",
  "RehWanKul22": "Newcomer OSS-Candidates: Characterizing Contributions of Novice Developers to GitHub.",
  "EldZahShu22": "Do I really need all this work to find vulnerabilities?",
  "KriTanSul22": "ConEx: Efficient Exploration of Big-Data System Configurations for Better Performance.",
  "WagWyr22": "Code Comprehension Confounders: A Study of Intelligence and Personality.",
  "XuCheHe22": "Data-Driven Loop Bound Learning for Termination Analysis.",
  "HuGuoCor22": "An Empirical Study on Data Distribution-Aware Test Selection for Deep Learning Enhancement.",
  "WuWuZho22": "Time-travel Investigation: Toward Building a Scalable Attack Detection Framework on Ethereum.",
  "IrsB\u00f6rPet22": "Supporting refactoring of BDD specifications - An empirical study.",
  "FahGruBey22": "A model-driven approach to reengineering processes in cloud computing.",
  "ReiZam22": "Reuse of Similarly Behaving Software Through Polymorphism-Inspired Variability Mechanisms.",
  "HeBarNic22": "DeepSTL - From English Requirements to Signal Temporal Logic.",
  "AhmFanYi22": "Verifix: Verified Repair of Programming Assignments.",
  "MarKesVer22": "Generation of refactoring algorithms by grammatical evolution.",
  "SteNicInv22": "Verification of Distributed Systems via Sequential Emulation.",
  "KapTseKyr22": "Help me with this: A categorization of open source software problems.",
  "LamMarSia22": "Translating quality-driven code change selection to an instance of multiple-criteria decision making.",
  "RosClaMad22": "Empirical Effort and Schedule Estimation Models for Agile Processes in the US DoD.",
  "YeCheDou22": "Knowledge-Based Environment Dependency Inference for Python Programs.",
  "HarThuLo22": "AndroEvolve: automated Android API update with data flow analysis and variable denormalization.",
  "MehHan22": "Imperative versus Declarative Collection Processing: An RCT on the Understandability of Traditional Loops versus the Stream API in Java.",
  "GreNucPal22": "The making of accessible Android applications: an empirical study on the state of the practice.",
  "NerBarOli22": "Compiling Quantamorphisms for the IBM Q Experience.",
  "WuJiaXia22a": "Evaluating and Improving Neural Program-Smoothing-based Fuzzing.",
  "MoyPufWeb22": "Uses of business process modeling in agile software development projects.",
  "NikBraMor22": "Automatic Fault Detection for Deep Learning Programs Using Graph Transformations.",
  "NagHal22": "How Software Developers Mitigate Their Errors When Developing Code.",
  "ZhaArc22": "Adaptive Hypermutation for Search-Based System Test Generation: A Study on REST APIs with EvoMaster.",
  "LiaHanLi22": "Modeling function-level interactions for file-level bug localization.",
  "HorBesVan22": "Using contextual knowledge in interactive fault localization.",
  "LiuNak22": "Automatic Test Case and Test Oracle Generation Based on Functional Scenarios in Formal Specifications for Conformance Testing.",
  "TurArtMis22": "Stubbifier: debloating dynamic server-side JavaScript applications.",
  "CaoLiLi22": "SemMT: A Semantic-Based Testing Approach for Machine Translation Systems.",
  "HumKhoAnt22": "A search-based framework for automatic generation of testing environments for cyber-physical systems.",
  "RomMerCec22": "Deep Reinforcement Learning for Black-box Testing of Android Apps.",
  "SelOunSai22": "Improving microservices extraction using evolutionary search.",
  "WuJiaXia22": "One Fuzzing Strategy to Rule Them All.",
  "WanXuCha22": "Characterizing and Detecting Bugs in WeChat Mini-Programs.",
  "HusPerWhi22": "Human Values in Software Engineering: Contrasting Case Studies of Practice.",
  "KelKabPle22": "What You See is What it Means! Semantic Representation Learning of Code based on Visualization and Transfer Learning.",
  "YedMen22": "On the Value of Oversampling for Deep Learning in Software Defect Prediction.",
  "YanShiHe22": "Natural Attack for Pre-trained Models of Code.",
  "LiPenXia22": "Enjoy your observability: an industrial survey of microservice tracing and analysis.",
  "UddAlaSer22": "A qualitative study of developers&apos; discussions of their problems and joys during the early COVID-19 months.",
  "MirLatPro22": "Type4Py: Practical Deep Similarity Learning-Based Type Inference for Python.",
  "LiWerErn22": "Towards privacy compliance: A design science study in a small organization.",
  "ObaNagSpe22": "Sentiment analysis tools in software engineering: A systematic mapping study.",
  "PerSimAlO22": "How do i refactor this? An empirical study on refactoring trends and topics in Stack Overflow.",
  "TriWieSar22": "Women&apos;s Participation in Open Source Software: A Survey of the Literature.",
  "GuoZhoYao22": "Precise Divide-By-Zero Detection with Affirmative Evidence.",
  "RodUrqMen22": "A Theory of Value for Value-Based Feature Selection in Software Engineering.",
  "KulGreDeu22": "Factors Affecting On-Time Delivery in Large-Scale Agile Software Development.",
  "AlbGorHer22": "Super-optimization of Smart Contracts.",
  "JahCev22": "S-DABT: Schedule and Dependency-aware Bug Triage in open-source bug tracking systems.",
  "ShrHalEdw22": "The Best Laid Plans or Lack Thereof: Security Decision-Making of Different Stakeholder Groups.",
  "AliMus22": "Layout merging with relative positioning in Concern-Oriented Reuse hierarchies.",
  "NiuLiNg22": "SPT-Code: Sequence-to-Sequence Pre-Training for Learning Source Code Representations.",
  "FouConMen22": "A mixed-methods analysis of micro-collaborative coding practices in OpenStack.",
  "PetKugHut22": "Defining adaptivity and logical architecture for engineering (smart) self-adaptive cyber-physical systems.",
  "CheSuo22": "Boosting Compiler Testing via Compiler Optimization Exploration.",
  "PreMohVil22": "An empirical study of Android behavioural code smells detection.",
  "WuXuNiu22": "Combinatorial Testing of RESTful APIs.",
  "AsaGas22": "Dynamical analysis of diversity in rule-based open source network intrusion detection systems.",
  "SaiOunMka22": "Detecting Continuous Integration Skip Commits Using Multi-Objective Evolutionary Search.",
  "ArcGal22": "Enhancing Search-based Testing with Testability Transformations for Existing APIs.",
  "AlmKorTah22": "Verification Approach for Refactoring Transformation Rules of State-Based Models.",
  "ZhoSioWan22": "SPI: Automated Identification of Security Patches via Commits.",
  "NguGru22": "BEDIVFUZZ: Integrating Behavioral Diversity into Generator-based Fuzzing.",
  "HanMeh22": "Two N-of-1 self-trials on readability differences between anonymous inner classes (AICs) and lambda expressions (LEs) on Java code snippets.",
  "TyaSibSur22": "Empirically developed framework for building trust in distributed agile teams.",
  "LorMadMon22": "Styler: learning formatting conventions to repair Checkstyle violations.",
  "LiYuWan22": "Are You Still Working on This? An Empirical Study on Pull Request Abandonment.",
  "WeiDenYan22": "Free Lunch for Testing: Fuzzing Deep-Learning Libraries from Open Source.",
  "HuMarCza22": "If a Human Can See It, So Should Your System: Reliability Requirements for Machine Vision Components.",
  "GarRaiFel22": "Introduction to the Special Issue on: Grey Literature and Multivocal Literature Reviews (MLRs) in software engineering.",
  "JiaCheWan22": "On the effectiveness of testing sentiment analysis systems with metamorphic testing.",
  "LinCasSer22": "Opinion Mining for Software Development: A Systematic Literature Review.",
  "EbrTusMah22": "Classifying Mobile Applications Using Word Embeddings.",
  "PapGroSub22": "Experimental Evaluation of Test-Driven Development With Interns Working on a Real Industrial Project.",
  "JaiVaiIye22": "Jigsaw: Large Language Models meet Program Synthesis.",
  "GarKouGho22": "Forecasting Architectural Decay From Evolutionary History.",
  "LiLuZha22": "SmartFast: an accurate and robust formal analysis tool for Ethereum smart contracts.",
  "LiuLiFu22": "Learning to Recommend Method Names with Global Context.",
  "WalGhaAla22": "Defect prediction using deep learning with Network Portrait Divergence for software evolution.",
  "BocSchApe22": "Measuring and Modeling Group Dynamics in Open-Source Software Development: A Tensor Decomposition Approach.",
  "QamS\u00fclT\u00fcz22": "Taxonomy of bug tracking process smells: Perceptions of practitioners and an empirical analysis.",
  "MasGarCal22": "A Common Terminology for Software Risk Management.",
  "GuiSarKri22": "Sentinel: A Hyper-Heuristic for the Generation of Mutant Reduction Strategies.",
  "CajL\u00e1rGei22": "UX professionals&apos; learning and usage of UX methods in agile.",
  "SobMinBah22": "Continuous and Proactive Software Architecture Evaluation: An IoT Case.",
  "WidPraHar22": "Real world projects, real faults: evaluating spectrum based fault localization techniques on Python projects.",
  "B\u00f6hSzeMet22": "On the Reliability of Coverage-Based Fuzzer Benchmarking.",
  "AmnPoe22": "Ambiguity in user stories: A systematic literature review.",
  "LiYuZho22": "Redundancy, Context, and Preference: An Empirical Study of Duplicate Pull Requests in OSS Projects.",
  "GreStrSha22": "An onboarding model for integrating newcomers into agile project teams.",
  "HuaLiaChe22": "Reviewing rounds prediction for code patches.",
  "CorRweFra22": "FlakiMe: Laboratory-Controlled Test Flakiness Impact Assessment.",
  "MoWeiFen22": "An exploratory study of bug prediction at the method level.",
  "ZhaHu22": "Towards Bidirectional Live Programming for Incomplete Programs.",
  "ZhaSuLiu22": "ReCDroid+: Automated End-to-End Crash Reproduction from Bug Reports for Android Apps.",
  "ZyrPetGua22": "Deja Vu: semantics-aware recording and replay of high-speed eye tracking and interaction data to support cognitive studies of software engineering tasks - methodology and analyses.",
  "JiaLiuJia22": "Heuristic and Neural Network Based Prediction of Project-Specific API Member Access.",
  "LiuPenMar22": "API-Related Developer Information Needs in Stack Overflow.",
  "LinWanWen22": "Context-Aware Code Change Embedding for Better Patch Correctness Assessment.",
  "GraLenFel22": "Psychometrics in Behavioral Software Engineering: A Methodological Introduction with Guidelines.",
  "YuKeuXia22": "Predicting the precise number of software defects: Are we there yet?",
  "NiuWuNie22": "A Theory of Pending Schemas in Combinatorial Testing.",
  "HofUrqCha22": "An empirical evaluation of a novel domain-specific language - modelling vehicle routing problems with Athos.",
  "AlmGay22": "Learning how to search: generating effective test cases through adaptive fitness function selection.",
  "BarDuDav22": "Exploiting Input Sanitization for Regex Denial of Service.",
  "LiaCheLi22": "Locating Performance Regression Root Causes in the Field Operations of Web-Based Systems: An Experience Report.",
  "OniLet22": "Analyzing Uncertainty in Release Planning: A Method and Experiment for Fixed-Date Release Cycles.",
  "TanFeiAvg22": "Does it matter who pays back Technical Debt? An empirical study of self-fixed TD.",
  "XuVasNeu22": "In-IDE Code Generation from Natural Language: Promise and Challenges.",
  "ReyGarBen22": "Cronista: A multi-database automated provenance collection system for runtime-models.",
  "HanYanMa22": "Control Parameters Considered Harmful: Detecting Range Specification Bugs in Drone Configuration Modules via Learning-Guided Search.",
  "WarCruLe22": "DeepDiagnosis: Automatically Diagnosing Faults and Recommending Actionable Fixes in Deep Learning Programs.",
  "VieMatRoc22": "The role of bug report evolution in reliable fixing estimation.",
  "KhaShiBia22": "Guidelines for Assessing the Accuracy of Log Message Template Identification Techniques.",
  "ChaHonBak22": "Enhancing Dynamic Symbolic Execution by Automatically Learning Search Heuristics.",
  "WanZhaZha22": "What Do They Capture? - A Structural Analysis of Pre-Trained Language Models for Source Code.",
  "RodKhvAlo22": "TraceSim: An Alignment Method for Computing Stack Trace Similarity.",
  "PraForRas22": "Including Everyone, Everywhere: Understanding Opportunities and Challenges of Geographic Gender-Inclusion in OSS.",
  "PonSutArt22": "Stateful Serverless Computing with Crucial.",
  "KasNisKam22": "An empirical study on self-admitted technical debt in modern code review.",
  "SawBisMoh22": "SSPCatcher: Learning to catch security patches.",
  "AmaAbuTor22": "AI-Enabled Automation for Completeness Checking of Privacy Policies.",
  "CheXiaLo22": "Defining Smart Contract Defects on Ethereum.",
  "JobApe22": "How Do Successful and Failed Projects Differ? A Socio-Technical Analysis.",
  "KarMilHer22": "Software system comparison with semantic source code embeddings.",
  "WanGaoWan22": "Automatic Detection, Validation, and Repair of Race Conditions in Interrupt-Driven Embedded Software.",
  "RaiWoh22": "Recruiting credible participants for field studies in software engineering research.",
  "CaoAhmRub22": "Rotten Apples Spoil the Bunch: An Anatomy of Google Play Malware.",
  "CreNozS\u00e1n22": "The role of awareness and gamification on technical debt management.",
  "SejSch22": "Practical Automated Detection of Malicious npm Packages.",
  "HaqShiBri22": "Efficient Online Testing for DNN-Enabled Systems using Surrogate-Assisted and Many-Objective Optimization.",
  "SoaSizSan22": "The effects of continuous integration on software development: a systematic literature review.",
  "PanXuPei22": "GUI-Guided Test Script Repair for Mobile Apps.",
  "AbiRahOpe22": "Multi-language design smells: a backstage perspective.",
  "AlkAlaKeb22": "A comparison of machine learning algorithms on design smell detection using balanced and imbalanced dataset: A study of God class.",
  "OliNetChe22": "Different, Really! A comparison of Highly-Configurable Systems and Single Systems.",
  "LiaLiSha22": "An Empirical Study of the Impact of Hyperparameter Tuning and Model Optimization on the Performance Properties of Deep Neural Networks.",
  "VogNeuFis22": "MICOSE4aPS: Industrially Applicable Maturity Metric to Improve Systematic Reuse of Control Software.",
  "SmiBibAmp22": "Refactoring embedded software: A study in healthcare domain.",
  "ZhaYuMao22": "FENSE: A feature-based ensemble modeling approach to cross-project just-in-time defect prediction.",
  "MahDeyNol22": "One-off events? An empirical study of hackathon code creation and reuse.",
  "LiCheChe22": "RoPGen: Towards Robust Code Authorship Attribution via Automatic Coding Style Transformation.",
  "YaoZhaPan22": "Orderly Generation of Test Data via Sorting Mutant Branches Based on Their Dominance Degrees for Weak Mutation Testing.",
  "LamShaChe22": "A3: Assisting Android API Migrations Using Code Examples.",
  "XieLiWan22": "NPC: Neuron Path Coverage via Characterizing Decision Logic of Deep Neural Networks.",
  "SchSun22": "ExAIS: Executable AI Semantics.",
  "HorKecSar22": "A Survey of Performance Optimization for Mobile Applications.",
  "RauPetTun22": "The Case for Adaptive Security Interventions.",
  "OliBerMay22": "A Delphi study to recognize and assess systems of systems vulnerabilities.",
  "XioWan22": "L2S: A Framework for Synthesizing the Most Probable Program under a Specification.",
  "WarNolVog22": "VUDENC: Vulnerability Detection with Deep Learning on a Natural Codebase for Python.",
  "CaoSunBo22": "MVD: Memory-Related Vulnerability Detection Based on Flow-Sensitive Graph Neural Networks.",
  "AzuMatKam22": "An empirical study on self-admitted technical debt in Dockerfiles.",
  "DilKetSan22": "Discovering Repetitive Code Changes in Python ML Systems.",
  "PenTorMon22": "Take a deep breath: Benefits of neuroplasticity practices for software developers and computer workers in a family of experiments.",
  "CarGerSan22": "Compositional Analysis of Hierarchical UML Statecharts.",
  "WanBroJen22": "Demystifying regular expression bugs.",
  "SunGonWnu22": "Towards an Anatomy of Software Craftsmanship.",
  "R\u00edoEmbEra22": "A unifying framework for the systematic analysis of Git workflows.",
  "RitKovHol22": "Comparing Block-Based Programming Models for Two-Armed Robots.",
  "GisAppPan22": "PROPR: Property-Based Automatic Program Repair.",
  "WilRenCar22": "Guided Feature Identification and Removal for Resource-constrained Firmware.",
  "ShaBerFla22": "Eyes on Code: A Study on Developers&apos; Code Navigation Strategies.",
  "HuWonKuh22": "CT-IoT: a combinatorial testing-based path selection framework for effective IoT testing.",
  "LiZhuWan22": "Repairing Order-Dependent Flaky Tests via Test Generation.",
  "ZhaLiuTan22": "Turnover of Companies in OpenStack: Prevalence and Rationale.",
  "SabGu\u00e9Pal22": "A Mixed-Method Approach to Recommend Corrections and Correct REST Antipatterns.",
  "TiaLiaBab22": "Relationships between software architecture and source code in practice: An exploratory survey and interview.",
  "BinMooIsa22": "Featherweight assisted vulnerability discovery.",
  "\u00c5grKnoBer22": "Agile software development one year into the COVID-19 pandemic.",
  "LiXuZha22": "OJXPERF: Featherlight Object Replica Detection for Java Programs.",
  "RezKamMcI22": "The Ghost Commit Problem When Identifying Fix-Inducing Changes: An Empirical Study of Apache Projects.",
  "LiuNoeLyo22": "How ReadMe files are structured in open source Java projects.",
  "F\u00e1vCasPim22": "SE3M: A model for software effort estimation using pre-trained embedding models.",
  "XuCheSun22": "Memory-Safety Challenge Considered Solved? An In-Depth Study with All Rust CVEs.",
  "IzqCab22": "On the analysis of non-coding roles in open source development.",
  "FenYanPen22": "Automated Detection of Password Leakage from Public GitHub Repositories.",
  "ZhaWanLiu22": "Mutant Reduction Evaluation: What is There and What is Missing?",
  "HuXiaLo22": "Practitioners&apos; Expectations on Automated Code Comment Generation.",
  "WieRacRie22": "Preventing technical debt with the TAP framework for Technical Debt Aware Management.",
  "KimJeoHon22": "Predictive Mutation Analysis via the Natural Language Channel in Source Code.",
  "BeeDamLie22": "Efficient static analysis and verification of featured transition systems.",
  "DoWriAli22": "Why Do Software Developers Use Static Analysis Tools? A User-Centered Study of Developer Needs and Motivations.",
  "CalGerIaf22": "Will you come back to contribute? Investigating the inactivity of OSS core developers in GitHub.",
  "C\u00f4gOliHas22": "Deprecation of Packages and Releases in Software Ecosystems: A Case Study on NPM.",
  "LomMorLen22": "A machine and deep learning analysis among SonarQube rules, product, and process metrics for fault prediction.",
  "XiaHuaZho22": "Search-based Diverse Sampling from Real-world Software Product Lines.",
  "LewMad22": "How far are we from reproducible research on code smell detection? A systematic literature review.",
  "BarSouSan22": "A Systematic Literature Review on prioritizing software test cases using Markov chains.",
  "MarZhaArc22": "On the Faults Found in REST APIs by Automated Test Generation.",
  "PanHuaYan22": "Comments on &quot;Using $k$k-Core Decomposition on Class Dependency Networks to Improve Bug Prediction Model&apos;s Practical Performance&quot;.",
  "LauKorRoc22": "Verification of Programs Sensitive to Heap Layout.",
  "NahZhoLew22": "Collaboration Challenges in Building ML-Enabled Systems: Communication, Documentation, Engineering, and Process.",
  "KaoChaJia22": "Towards cost-effective API deprecation: A win-win strategy for API developers and API users.",
  "LiSolAvg22": "Identifying self-admitted technical debt in issue tracking systems using machine learning.",
  "AhmNooSha22": "Trimmer: An Automated System for Configuration-Based Software Debloating.",
  "ShiMuZha22": "BugListener: Identifying and Synthesizing Bug Reports from Collaborative Live Chats.",
  "KanAwLo22": "Detecting False Alarms from Automatic Static Analysis Tools: How Far are We?",
  "HeLiChe22": "Diversified Third-Party Library Prediction for Mobile App Development.",
  "AlaKra22": "How Scrum adds value to achieving software quality?",
  "\u00c7atYueAli22": "Uncertainty-aware Prediction Validator in Deep Learning Models for Cyber-physical System Data.",
  "Jr22": "On the Effectiveness of Bisection in Performance Regression Localization.",
  "ZhaWanChe22": "History-Driven Test Program Synthesis for JVM Testing.",
  "ManMag22": "Testing Self-Adaptive Software With Probabilistic Guarantees on Performance Metrics: Extended and Comparative Results.",
  "ZamMudArn22": "Using code reviews to automatically configure static analysis tools.",
  "FuWanZho22": "How resource utilization influences UI responsiveness of Android software.",
  "GhaEmaMil22": "Automatically inferring user behavior models in large-scale web applications.",
  "WenHeWu22": "Controlled Concurrency Testing via Periodical Scheduling.",
  "TanJiaZho22": "Detecting Compiler Warning Defects Via Diversity-Guided Program Mutation.",
  "AssColCar22": "Analysis of a many-objective optimization approach for identifying microservices from legacy systems.",
  "MosOkuMir22": "A Grounded Theory Based Approach to Characterize Software Attack Surfaces.",
  "DuLiLiu22": "Windranger: A Directed Greybox Fuzzer driven by Deviation Basic Blocks.",
  "PasThoKar22": "Story points changes in agile iterative development.",
  "LiuZhaLiu22": "Context2Vector: Accelerating security event triage via context representation learning.",
  "HidGruHod22": "The Effects of Human Aspects on the Requirements Engineering Process: A Systematic Literature Review.",
  "MehAgaGup22": "Modeling Functional Similarity in Source Code With Graph-Based Siamese Networks.",
  "CarMen22": "Programming language implementations for context-oriented self-adaptive systems.",
  "LinTanHas22": "The Impact of Data Merging on the Interpretation of Cross-Project Just-In-Time Defect Models.",
  "DisJayZah22": "Software security patch management - A systematic literature review of challenges, approaches, tools and practices.",
  "KhaFarKha22": "A deep learning-based automated framework for functional User Interface testing.",
  "LimVer22": "A Multi-Armed Bandit Approach for Test Case Prioritization in Continuous Integration Environments.",
  "BeyHalLem22": "Decomposing Software Verification into Off-the-Shelf Components: An Application to CEGAR.",
  "YanWanYao22": "DescribeCtx: Context-Aware Description Synthesis for Sensitive Behaviors in Mobile Apps.",
  "Al\u00e9KarRos22": "Practitioners&apos; best practices to Adopt, Use or Abandon Model-based Testing with Graphical models for Software-intensive Systems.",
  "Kr\u00f6Fl\u00f6Ger22": "Incremental software product line verification - A performance analysis with dead variable code.",
  "JebRahKho22": "Clones in deep learning code: what, where, and why?",
  "TiaZhaSto22": "What Makes a Good Commit Message?",
  "AbiRziFer22": "X-SBR: On the Use of the History of Refactorings for Explainable Search-Based Refactoring and Intelligent Change Operators.",
  "DinRyaMyt22": "TOGA: A Neural Method for Test Oracle Generation.",
  "SonKanHyu22": "Continuous verification of system of systems with collaborative MAPE-K pattern and probability model slicing.",
  "GirLanNov22": "Emotions and Perceived Productivity of Software Developers at the Workplace.",
  "SchCit22": "An empirical investigation of command-line customization.",
  "SouLimFon22": "Developers&apos; viewpoints to avoid bug-introducing changes.",
  "XuChePei22": "Restore: Retrospective Fault Localization Enhancing Automated Program Repair.",
  "CheLiuSu22": "Adaptive Performance Anomaly Detection for Online Service Systems via Pattern Sketching.",
  "KimRagHeo22": "Learning Probabilistic Models for Static Analysis Alarms.",
  "PatFacHam22": "The sense of logging in the Linux kernel.",
  "HerFerGal22a": "Correction to: Uniform and scalable sampling of highly configurable systems.",
  "HenLesStr22": "A literature review on optimization techniques for adaptation planning in adaptive systems: State of the art and research directions.",
  "SeiHecCav22": "Leveraging Structure in Software Merge: An Empirical Study.",
  "DogT\u00fcz22": "Towards a taxonomy of code review smells.",
  "KhaMogJin22": "Learning to Reduce False Positives in Analytic Bug Detectors.",
  "LiuLinAnu22": "Generating and Visualizing Trace Link Explanations.",
  "ZhaWanSun22": "Automatic Fairness Testing of Neural Classifiers Through Adversarial Sampling.",
  "NamNasMes22": "A controlled experiment of different code representations for learning-based program repair.",
  "PerBruL\u00e1r22": "Agile software development and UX design: A case study of integration by mutual adjustment.",
  "BjaBerSve22": "Inter-team communication in large-scale co-located software engineering: a case study.",
  "NurShaCha22": "Human values in software development artefacts: A case study on issue discussions in three Android applications.",
  "YaoSaySha22": "Improving State-of-the-Art Compression Techniques for Log Management Tools.",
  "VerSamAkh22": "An Empirical Study of C++ Vulnerabilities in Crowd-Sourced Code Examples.",
  "SunZhaXio22": "Improving Machine Translation Systems via Isotopic Replacement.",
  "WanCheXin22": "DiffTech: Differencing Similar Technologies From Crowd-Scale Comparison Discussions.",
  "GalLamMcI22": "Lessons from Eight Years of Operational Data from a Continuous Integration Service: An Exploratory Case Study of CircleCI.",
  "ZhaWanZha22": "ST-TLF: Cross-version defect prediction framework based transfer learning.",
  "PerAleTan22": "Search-based fairness testing for regression-based machine learning systems.",
  "PecCatFer22": "Software testing and Android applications: a large-scale empirical study.",
  "LapP\u00e9rPas22": "Leveraging execution traces to enhance traceability links recovery in BPMN models.",
  "ThoPorTan22": "AutoTransform: Automated Code Transformation to Support Modern Code Review Process.",
  "SokWeiSal22": "Change Is the Only Constant: Dynamic Updates for Workflows.",
  "ZhaLiMa22": "CBUA: A Probabilistic, Predictive, and Practical Approach for Evaluating Test Suite Effectiveness.",
  "LinZhaAda22": "Upstream bug management in Linux distributions.",
  "LeeAma22": "A comparative study on vectorization methods for non-functional requirements classification.",
  "LimMenVer22": "Cost-effective learning-based strategies for test case prioritization in continuous integration of highly-configurable software.",
  "P\u00e9rFonArc22": "Empowering the Human as the Fitness Function in Search-Based Model-Driven Engineering.",
  "WohKalFel22": "Successful combination of database search and snowballing for identification of primary studies in systematic literature studies.",
  "MatAmaDor22": "Alternatives for testing of context-aware software systems in non-academic settings: results from a Rapid Review.",
  "J\u00fanMarSan22": "C2M: a maturity model for the evaluation of communication in distributed software development.",
  "XieYanWan22": "DevRec: Multi-Relationship Embedded Software Developer Recommendation.",
  "MahAjmWil22": "Feature toggles as code: Heuristics and metrics for structuring feature toggles.",
  "LiuWanLiu22": "PROMAL: Precise Window Transition Graphs for Android via Synergy of Program Analysis and Machine Learning.",
  "LiMaWan22": "Unleashing the Power of Compiler Intermediate Representation to Enhance Neural Program Embeddings.",
  "MarAchPer22": "Transfer Learning Across Variants and Versions: The Case of Linux Kernel Size.",
  "S\u00e1nDelMed22": "Mutation testing in the wild: findings from GitHub.",
  "MahErnTon22": "Conclusion stability for natural language based mining of design discussions.",
  "MorAssMar22": "Open-source software product line extraction processes: the ArgoUML-SPL and Phaser cases.",
  "ZhaHarMa22": "Machine Learning Testing: Survey, Landscapes and Horizons.",
  "TheHeeAvg22": "A mapping study on documentation in Continuous Software Development.",
  "LiDiaLi22": "Android Custom Permissions Demystified: A Comprehensive Security Evaluation.",
  "LorRalFel22": "Social Science Theories in Software Engineering Research.",
  "AkbSmoMah22": "Toward successful DevSecOps in software development organizations: A decision-making framework.",
  "SahDowBre22": "PREACH: A Heuristic for Probabilistic Reachability to Identify Hard to Reach Statements.",
  "TsiWau22": "A model-driven framework to support strategic agility: Value-added perspective.",
  "StrHodPaa22": "Theories in Agile Software Development: Past, Present, and Future Introduction to the XP 2020 Special Section.",
  "EndBoeWei22": "Hashing It Out: A Survey of Programmers&apos; Cannabis Usage, Perception, and Motivation.",
  "BusOpeNad22": "Reuse and maintenance practices among divergent forks in three software ecosystems.",
  "MarLarBer22": "Injecting software faults in Python applications.",
  "ZheCheDu22": "NeuronFair: Interpretable White-Box Fairness Testing through Biased Neuron Identification.",
  "LiCheYao22": "How to Evaluate Solutions in Pareto-Based Search-Based Software Engineering: A Critical Review and Methodological Guidance.",
  "MotSotBru22": "Quality of Automated Program Repair on Real-World Defects.",
  "KhaAbrNia22": "Introduction to the special issue on managing software processes using soft computing techniques.",
  "NguNgoNgu22": "A Variability Fault Localization Approach for Software Product Lines.",
  "YanHasZou22": "An empirical study on release notes patterns of popular apps in the Google Play Store.",
  "PanRaj22": "Decomposing Convolutional Neural Networks into Reusable and Replaceable Modules.",
  "HuqHasHaq22": "Review4Repair: Code review aided automatic program repairing."
}