The SZZ algorithm for identifying bug-inducing
changes has been widely used to evaluate defect prediction
techniques and to empirically investigate when, how, and by
whom bugs are introduced.
{{background}}
Over the years, researchers have pro-
posed several heuristics to improve the SZZ accuracy, providing
various implementations of SZZ.
{{background}}
However, fairly evaluating those
implementations on a reliable oracle is an open problem:
{{background}}
SZZ
evaluations usually rely on (i) the manual analysis of the SZZ
output to classify the identified bug-inducing commits as true or
false positives; or (ii) a golden set linking bug-fixing and bug-
inducing commits.
{{background}}
In both cases, these manual evaluations are
performed by researchers with limited knowledge of the studied
subject systems.
{{background}}
Ideally, there should be a golden set created by
the original developers of the studied systems.
{{background}}
We propose a methodology to build a “developer-informed”
oracle for the evaluation of SZZ variants.
{{objective}}
We use Natural Lan-
guage Processing (NLP) to identify bug-fixing commits in which
developers explicitly reference the commit(s) that introduced a
fixed bug.
{{design}}
This was followed by a manual filtering step aimed at
ensuring the quality and accuracy of the oracle.
{{design}}
Once built, we
used the oracle to evaluate several variants of the SZZ algorithm
in terms of their accuracy.
{{method}}
Our evaluation helped us to distill a
set of lessons learned to further improve the SZZ algorithm.
{{announce-result}}
